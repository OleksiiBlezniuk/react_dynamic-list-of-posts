{"version":3,"sources":["components/Post/Post.jsx","components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Post","post","setPostId","selectedPostId","id","userId","title","key","className","type","onClick","PostsList","posts","map","request","enpoint","options","fetch","then","response","json","result","data","getPostComments","postId","NewCommentForm","setComments","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","newComment","method","JSON","stringify","addCommentToServer","placeholder","value","onChange","target","required","getUserPosts","PostDetails","setPost","comments","isCommentsVisible","setIsCommentsVisible","useEffect","removeComment","commentId","removeCommentFromServer","length","comment","App","setUserId","setPosts","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e057269a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Post({\n  post,\n  setPostId,\n  selectedPostId,\n}) {\n  const { id, userId, title } = post;\n  const openPost = () => {\n    setPostId(id);\n  };\n\n  const closePost = () => {\n    setPostId(0);\n  };\n\n  return (\n    <li key={id} className=\"PostsList__item\">\n      <div>\n        <b>{`[User #${userId}]: `}</b>\n        {title}\n      </div>\n      {id === selectedPostId ? (\n        <button\n          type=\"button\"\n          className=\"PostsList__button button\"\n          onClick={closePost}\n        >\n          Close\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"PostsList__button button\"\n          onClick={openPost}\n        >\n          Open\n        </button>\n      )}\n    </li>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  setPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { Post } from '../Post';\n\nexport const PostsList = ({ posts, setPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts && posts.map(post => (\n        <Post\n          key={post.id}\n          post={post}\n          setPostId={setPostId}\n          selectedPostId={selectedPostId}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired).isRequired,\n  setPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(enpoint, options) {\n  return fetch(`${BASE_URL}${enpoint}`, options)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import { request } from './api';\n\nexport function getPostComments(postId) {\n  return request(`/comments?postId=${postId}`);\n}\n\nexport function removeCommentFromServer(commentId) {\n  return request(`/comments/${commentId}`, { method: 'DELETE' });\n}\n\nexport function addCommentToServer(newComment) {\n  return request(`/comments`, {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n  });\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addCommentToServer, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    addCommentToServer(newComment)\n      .then(() => getPostComments(postId))\n      .then(result => setComments(result));\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={({ target }) => {\n            setName(target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={({ target }) => {\n            setEmail(target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={({ target }) => {\n            setBody(target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import { request } from './api';\n\nexport function getUserPosts(userId) {\n  return userId !== 0 ? request(`/posts?userId=${userId}`) : request('/posts');\n}\n\nexport function getPostDetails(id) {\n  return request(`/posts/${id}`);\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, removeCommentFromServer } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentsVisible, setIsCommentsVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(result => setPost(result));\n    getPostComments(selectedPostId)\n      .then(result => setComments(result));\n    setIsCommentsVisible(true);\n  }, [selectedPostId]);\n\n  if (post === null) {\n    return (\n      <div className=\"PostDetails\">\n        <h2>Open post to see details</h2>\n      </div>\n    );\n  }\n\n  const handleCommentsVisibility = () => {\n    if (isCommentsVisible) {\n      setIsCommentsVisible(false);\n    } else {\n      setIsCommentsVisible(true);\n    }\n  };\n\n  const removeComment = (commentId) => {\n    removeCommentFromServer(commentId)\n      .then(() => getPostComments(selectedPostId))\n      .then(result => setComments(result));\n  };\n\n  const { body } = post;\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleCommentsVisibility}\n        >\n          {isCommentsVisible\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {isCommentsVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\ngetUserPosts(4);\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(result => setPosts(result));\n  }, [userId]);\n\n  const handleSelect = (event) => {\n    const { value } = event.target;\n\n    setUserId(Number(value));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setPostId={setPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}